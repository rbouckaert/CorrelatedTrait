<beast version='2.0' namespace='correlatedcharacters.polycharacter'>

	<mergewith point='aux-partitions-panels'>
		<alignmentProvider id="Add Correlated Morphological Data"
			spec='tsa.app.beauti.BeautiCompoundTraitProvider'
			template='@CorrelatedTrait' />

		<subtemplate id='CorrelatedTrait'
			class='tsa.correlatedcharacters.polycharacter.CompoundAlignment4' mainid='$(n)'
			suppressInputs="tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel.shape,
							tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel.datatype,
							tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel.rates,
							tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel.eigenSystem,
							tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel.frequencies,
							tsa.correlatedcharacters.polycharacter.CompoundTreeLikelihood.data,
							">
			<![CDATA[
				<!-- tree and its properties -->
				<taxonset id='TaxonSet.$(n)' spec='beast.base.evolution.alignment.TaxonSet'
					alignment='@$(n)' />
				
				<!-- Substitution model parameters rates are generated by parameterclone. -->
                        <stateNode spec="beast.base.inference.parameter.RealParameter" id="rateValues.s:$(n)"
                                lower="0.0">
                                1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0
                        </stateNode>
                        <stateNode spec="beast.base.inference.parameter.IntegerParameter" id="groupings.s:$(n)"
                                lower="0" upper="2">
                                0 2 1 0 0 0 0 0
                        </stateNode>
                        <stateNode spec="beast.base.inference.parameter.IntegerParameter" id="sizes.s:$(n)">
                                6 1 1 0 0 0 0 0
                        </stateNode>				
				<parameter spec='tsa.parameterclone.selector.Selector' id='rates.s:$(n)' parameters='@rateValues.s:$(n)' groupings='@groupings.s:$(n)'/>
				<frequencies id='frequencies.s:$(n)' spec='beast.base.evolution.substitutionmodel.Frequencies' estimate="false" frequencies="0.25 0.25 0.25 0.25"/>

				<distribution id="morphTreeLikelihood.$(n)" spec='tsa.correlatedcharacters.polycharacter.CompoundTreeLikelihood' data='@$(n)'
					tree='@Tree.t:$(n)' tag="correlated">
					<siteModel spec='SiteModel' id="morphSiteModel.s:$(n)"
						gammaCategoryCount='1'>
						<proportionInvariant spec='parameter.RealParameter'
							id='proportionInvariant.s:$(n)' value='0.0' lower='0' upper='1'
							estimate='false' />
						<mutationRate spec='parameter.RealParameter' id='mutationRate.s:$(n)'
							value='1.0' estimate='false' />
						<shape spec='parameter.RealParameter' id='gammaShape.s:$(n)'
							value='1.0' estimate='false' />
						<!-- Correlated subst model -->
						<substModel spec="tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel"
							id="CorrelatedSubstitutionModel.s:$(n)"
							frequencies='@frequencies.s:$(n)'
							rates="@rates.s:$(n)"
							shape='2 2'/>
					</siteModel>
					<branchRateModel id="StrictClockModel.c:$(n)"
						spec="beast.base.evolution.branchratemodel.StrictClockModel">
						<parameter id="clockRate.c:$(n)" name="clock.rate"
							value="1.0" />
					</branchRateModel>
				</distribution>


				<distribution id='ClockPrior.c:$(n)' x="@clockRate.c:$(n)"
					spec='beast.base.inference.distribution.Prior'>
					<distr spec='beast.base.inference.distribution.Gamma' alpha="0.001"
						beta="1000." offset="0.0" />
				</distribution>
				
				<prior id='GammaShapePrior.s:$(n)' x='@gammaShape.s:$(n)'>
					<distr spec="beast.base.inference.distribution.Exponential" mean='1' />
				</prior>
				<prior id='PropInvariantPrior.t:$(n)' x='@proportionInvariant.s:$(n)'>
					<distr spec="beast.base.inference.distribution.Uniform" lower='0'
						upper='1' />
				</prior>

                <!-- Use a flat distribution -->
				<distribution id="correlatedRatesPrior.s:$(n)" spec="beast.base.inference.distribution.Prior" x="@rateValues.s:$(n)">
                	<distr spec="tsa.parameterclone.helpers.RescaledDirichlet" sizes="@sizes.s:$(n)" />
                </distribution>
                
				<operator id='proportionInvariantScaler.s:$(n)' spec='ScaleOperator'
					scaleFactor="0.5" weight="0.1" parameter="@proportionInvariant.s:$(n)" />
				<operator id='mutationRateScaler.s:$(n)' spec='ScaleOperator'
					scaleFactor="0.5" weight="0.1" parameter="@mutationRate.s:$(n)" />
				<operator id='gammaShapeScaler.s:$(n)' spec='ScaleOperator'
					scaleFactor="0.5" weight="0.1" parameter="@gammaShape.s:$(n)" />

    			<operator groupings="@groupings.s:$(n)" id="Merger.t:$(n)" parameters="@rateValues.s:$(n)" sizes="@sizes.s:$(n)" spec="tsa.parameterclone.splitandmerge.MergeOperator" weight="10.0" />
    			<operator groupings="@groupings.s:$(n)" id="Splitter.t:$(n)" parameters="@rateValues.s:$(n)" sizes="@sizes.s:$(n)" spec="tsa.parameterclone.splitandmerge.SplitOperator" weight="10.0" />
				<operator id="Exchange.t:$(n)" spec="DeltaExchangeOperator" parameter="@rateValues.s:$(n)" delta="1.0" weightvector="@sizes.s:$(n)" weight="10.0" />
				
				<!-- logging useful information -->
				<log id="IndependencyLogger.s:$(n)" spec="tsa.correlatedcharacters.polycharacter.IndependencyLogger" model="@CorrelatedSubstitutionModel.s:$(n)"/>
				
				<logger id='treeWithCorrelationLogger.$(n)' logEvery="1000" fileName="$(filebase)_tree_with_trait.trees" mode="tree">
                        <log spec='beast.base.evolution.tree.TreeWithTraitLogger' tree='@Tree.t:$(n)'>
                                <metadata idref="posterior"/>
                                <metadata idref="morphTreeLikelihood.$(n)"/>
                        </log>
                </logger>
				]]>
				
				

			<connect srcID='morphTreeLikelihood.$(n)' targetID='likelihood'
				inputName='distribution' if="isInitializing" />

			<connect srcID='treelog.t:$(n)' targetID='mcmc' inputName='logger'
				if='inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true' />

			<connect srcID="correlatedRatesPrior.s:$(n)"  targetID='prior'
				inputName='distribution'
				if='inposterior(morphTreeLikelihood.$(n)) and inlikelihood(rateValues.s:$(n)) and rateValues.s:$(n)/estimate=true' />
			<connect srcID='ClockPrior.c:$(n)' targetID='prior'
				inputName='distribution'
				if='inposterior(morphTreeLikelihood.$(n)) and inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true' />
			<connect srcID='MutationRatePrior.s:$(n)' targetID='prior'
				inputName='distribution'
				if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true' />
			<connect srcID='GammaShapePrior.s:$(n)' targetID='prior'
				inputName='distribution'
				if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'>Prior on gamma shape for partition s:$(n)</connect>
			<connect srcID='PropInvariantPrior.s:$(n)' targetID='prior'
				inputName='distribution'
				if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'>Prior on proportion invariant for partition s:$(n)</connect>

			<connect srcID='clockRate.c:$(n)' targetID='state' inputName='stateNode'
				if='inposterior(morphTreeLikelihood.$(n)) and inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true' />
			<connect srcID='proportionInvariant.s:$(n)' targetID='state'
				inputName='stateNode'
				if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true' />
			<connect srcID='mutationRate.s:$(n)' targetID='state'
				inputName='stateNode'
				if='inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true' />
			<connect srcID='gammaShape.s:$(n)' targetID='state'
				inputName='stateNode'
				if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true' />

			<connect srcID='rateValues.s:$(n)' targetID='state' inputName='stateNode'
				if='inposterior(Tree.t:$(n))' />
			<connect srcID='groupings.s:$(n)' targetID='state' inputName='stateNode'
				if='inposterior(Tree.t:$(n))' />
			<connect srcID='sizes.s:$(n)' targetID='state' inputName='stateNode'
				if='inposterior(Tree.t:$(n))' />

			<connect srcID='mutationRateScaler.c:$(n)' targetID='mcmc'
				inputName='operator'
				if='inposterior(morphTreeLikelihood.$(n)) and inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'>Scales migration rate of morphological characters on partition
				$(n)
			</connect>
			<connect srcID='proportionInvariantScaler.s:$(n)' targetID='mcmc'
				inputName='operator'
				if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'>Scales proportion of invariant sites parameter of partition $(n)
			</connect>
			<connect srcID='mutationRateScaler.s:$(n)' targetID='mcmc'
				inputName='operator'
				if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'>Scales mutation rate of partition s:$(n)</connect>
			<connect srcID='gammaShapeScaler.s:$(n)' targetID='mcmc'
				inputName='operator'
				if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'>Scales gamma shape parameter of partition s:$(n)</connect>

			<connect srcID="Merger.t:$(n)" targetID='mcmc' inputName='operator'
				if='inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Merges evolutionary rates in t:$(n)
			</connect>
			<connect srcID="Splitter.t:$(n)" targetID='mcmc' inputName='operator'
				if='inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Ungroups evolutionary rates in t:$(n)
			</connect>
			<connect srcID="Exchange.t:$(n)" targetID='mcmc' inputName='operator'
				if='inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Changes the rates in t:$(n)
			</connect>

			<connect srcID='morphTreeLikelihood.$(n)' targetID='tracelog' inputName='log' if='inlikelihood(morphTreeLikelihood.$(n))' />
			<connect srcID='IndependencyLogger.s:$(n)' targetID='tracelog' inputName='log' if='inlikelihood(CorrelatedSubstitutionModel.s:$(n))' />
			<connect srcID="CorrelatedSubstitutionModel.s:$(n)" targetID='tracelog' inputName='log' if='inlikelihood(CorrelatedSubstitutionModel.s:$(n))'/>
			<connect srcID='treeWithCorrelationLogger.$(n)' targetID='mcmc' inputName='logger' if='inlikelihood(morphTreeLikelihood.$(n))' />

			
			<connect srcID='proportionInvariant.s:$(n)' targetID='tracelog'
				inputName='log'
				if='inposterior(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true' />
			<connect srcID='mutationRate.s:$(n)' targetID='tracelog'
				inputName='log'
				if='inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true' />
			<connect srcID='gammaShape.s:$(n)' targetID='tracelog'
				inputName='log'
				if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true' />
			<connect srcID='clockRate.c:$(n)' targetID='tracelog'
				inputName='log'
				if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true' />

		</subtemplate>

	</mergewith>

	<mergewith point='substModelTemplatesXXX'>

		<!-- CorrelatedSubstitution substitution model -->
		<subtemplate id='CorrelatedSubstitution'
			class='tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel'
			mainid='CorrelatedSubstitution.s:$(n)'>
<![CDATA[
    <!--<plugin spec='tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel' id='CorrelatedSubstitution.s:$(n)'/>-->
]]>
		</subtemplate>
	</mergewith>

</beast>

